@import "variables";

$circle-border-width: 16px;
$circle-member-size: 48px + $circle-border-width;

.page {
  display: flex;
  flex-direction: row;
  height: 100%;

  > .circles {
    overflow-y: auto;
    height: 100%;
    width: 100%;
  }

  > .followers {
    height: 100%;
    width: 340px;
    background: $light;
    flex-direction: column;
    display: flex;
    flex: 1 0 340px;
    overflow-y: auto;

    > .card {
      margin-bottom: map_get($spacers, 2);
      width: 100%;

      &:last-child {
        margin-bottom: 0;
      }

      > .card-body {
        > img {
          width: 40px;
          height: 40px;
          flex-basis: 40px;
          min-width: 40px;
        }

        > div > .text-truncate {
          width: 160px;
        }
      }
    }
  }
}

.circle-wrapper {
  width: 100%;
  padding-bottom: 100%;

  .circle {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;

    .circle-info {
      border: $circle-border-width solid $secondary;
      width: 80%;
      height: 80%;
      border-radius: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      background: $gray-200;

      .circle-name {
        font-weight: bold;
        font-size: $font-size-lg;
        text-transform: uppercase;
        color: $secondary;
      }

      .circle-members-count {
        font-size: $font-size-lg * 2;
        font-weight: bold;
        color: lighten($primary, 5%);
      }
    }

    .circle-members {
      width: calc(80% + 48px);
      height: calc(80% + 48px);
      display: flex;
      justify-content: center;
      align-items: center;
      position: absolute;

      .circle-member {
        width: $circle-member-size;
        height: $circle-member-size;
        border: $circle-border-width / 2 solid $secondary;
        border-radius: 100%;
        position: absolute;
        background-position: center;
        background-size: cover;
        background-color: $secondary;
        display: flex;
        justify-content: center;
        align-items: center;
        text-transform: uppercase;
        color: white;
        font-size: 2em;

        &:nth-child(1) {
          left: 5px;
        }

        &:nth-child(2) {
          top: 0;
          left: 0;
          margin: calc(20% - #{$circle-member-size} / 2);
        }

        &:nth-child(3) {
          top: 5px;
        }

        &:nth-child(4) {
          top: 0;
          right: 0;
          margin: calc(20% - #{$circle-member-size} / 2);
        }

        &:nth-child(5) {
          right: 5px;
        }

        &:nth-child(6) {
          bottom: 0;
          right: 0;
          margin: calc(20% - #{$circle-member-size} / 2);
        }

        &:nth-child(7) {
          bottom: 5px;
        }

        &:nth-child(8) {
          bottom: 0;
          left: 0;
          margin: calc(20% - #{$circle-member-size} / 2);
        }
      }
    }
  }
}

.drop-zone {
  &::before {
    content: '';
    position: absolute;
    border-radius: 50%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    display: block;
  }

  &.drag-started {
    border: 2px dashed $primary;

    &::before {
      z-index: 1;
    }

    &.drag-entered {
      background: rgba($primary, 0.12) !important;
      color: $primary !important;
      width: 100% !important;
      height: 100% !important;

      .members .circle-member {
        opacity: 1 !important;
      }
    }
  }
}

.users-container,
.circles-container {
  flex: 0 1 50%;
  overflow: auto;

  .card {
    &.selected {
      background: rgba($primary, 0.12);

      a {
        color: $primary !important;
      }
    }
  }
}

/// Mixin to place items on a circle
/// @author Hugo Giraudel
/// @author Ana Tudor
/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size) {
  position: absolute;
  padding: 0;
  border-radius: 50%;
  list-style: none;

  > * {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: $item-size;
    height: $item-size;
    margin: -($item-size / 2);

    $angle: (360 / $item-count);
    $rot: 270;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg) translate(($circle-size / 2) - 16) scale(1) rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}

.circles-container {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;

  > div {
    width: 250px;
    height: 250px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;

    > div {
      background: #eee;
      border-radius: 50%;
      width: 80%;
      height: 80%;
      display: flex;
      align-items: center;
      justify-content: center;
      transition-timing-function: cubic-bezier(0.35, 0, 0.25, 1);
      transition-property: width, height, border;
      transition-duration: 0.1s;
      position: relative;


      &:hover,
      &.hovered {
        width: 100%;
        height: 100%;

        .members .circle-member {
          opacity: 1;
        }
      }

      &.member-exists {
        box-shadow: 0 0 0 2px black;
      }

      .members {
        @include on-circle($item-count: 8, $circle-size: 200px, $item-size: 48px);

        .circle-member {
          width: 48px;
          height: 48px;
          border-radius: 50%;
        }
      }
    }
  }

  .added-information {
    position: absolute;
    width: 48px;
    height: 48px;
    display: grid;
    place-items: center;
    border-radius: 50%;
    background: $success;
    color: #fff;
    font-size: 22px;
  }
}

.drag-preview {
  position: absolute;
  background: $primary;
  color: white;
  height: 48px;
  display: flex;
  align-items: center;
  padding: 0 16px;
  border-radius: 6px;
  font-weight: 700;
}

.circles-help {
  flex-basis: 48px;
  flex-shrink: 0;
  display: flex;
  color: rgba(0, 0, 0, 0.54);
  align-items: center;
  justify-content: center;
  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.12);
}

.dragging-selected {
  opacity: 0.5;
}
